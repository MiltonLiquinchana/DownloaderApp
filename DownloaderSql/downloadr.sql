DROP DATABASE IF EXISTS DOWNLOADER;
CREATE DATABASE IF NOT EXISTS DOWNLOADER;

USE DOWNLOADER;

#Tabla que guarda la categoria de archivo
DROP TABLE IF EXISTS Category;
CREATE TABLE IF NOT EXISTS Category(
PK_CATEGORY INT PRIMARY KEY AUTO_INCREMENT,
C_Name VARCHAR(100) NOT NULL UNIQUE,
C_FileOutputPath TEXT NOT NULL
);

DROP TABLE IF EXISTS FileType;
CREATE TABLE IF NOT EXISTS FileType(
PK_FILETYPE INT PRIMARY KEY AUTO_INCREMENT,
FT_Name VARCHAR(10) NOT NULL UNIQUE
);

-- Tabla para definir el estado de la descarga(no descargado, incompleta, descargado)
DROP TABLE IF EXISTS DownloadStatus;
CREATE TABLE IF NOT EXISTS DownloadStatus(
PK_DOWNLOADSTATUS INT PRIMARY KEY AUTO_INCREMENT,
DS_Status VARCHAR(30) NOT NULL UNIQUE
);

-- Tabla para para definir la cola a la que pertenece la descarga en caso de que se de en descargar mas tarde
DROP TABLE IF EXISTS DownloadQueue;
CREATE TABLE IF NOT EXISTS DownloadQueue(
PK_DOWNLOADQUEUE INT PRIMARY KEY AUTO_INCREMENT,
DQ_Name VARCHAR(100) NOT NULL UNIQUE
);

DROP TABLE IF EXISTS DownloadFile;
CREATE TABLE IF NOT EXISTS DownloadFile(
PK_DOWNLOADFILE INT PRIMARY KEY AUTO_INCREMENT,
DF_URL TEXT NOT NULL,
DF_Name VARCHAR(250) NOT NULL UNIQUE,
DF_FileLength DECIMAL(50,15) NOT NULL,
DF_Description VARCHAR(250),
FK_CATEGORY INT NOT NULL,
FOREIGN KEY (FK_CATEGORY) REFERENCES Category(PK_CATEGORY),
FK_FILETYPE INT NOT NULL,
FOREIGN KEY (FK_FILETYPE) REFERENCES FileType(PK_FILETYPE),
FK_DOWNLOADSTATUS INT NOT NULL,
FOREIGN KEY(FK_DOWNLOADSTATUS) REFERENCES DownloadStatus(PK_DOWNLOADSTATUS),
FK_DOWNLOADQUEUE INT NOT NULL,
FOREIGN KEY(FK_DOWNLOADQUEUE) REFERENCES DownloadQueue(PK_DOWNLOADQUEUE)
);

